server.servlet.context-path=/
server.port=9443
server.session-timeout=1800
server.tomcat.compression=on
server.tomcat.compressableMimeTypes=application/json,application/csv,application/xml
spring.jersey.applicationPath=/app


# Spring Boot Actuator
management.server.port=9988
management.server.servlet.context-path=/actuator
management.security.enabled=false
endpoints.info.id=info
endpoints.info.sensitive=false
endpoints.info.enabled=true
info.app.name=Skel API

spring.datasource.url= jdbc:h2:mem:testdb;MODE=MySQL;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE;IGNORECASE=TRUE 
spring.datasource.username= SA
spring.datasource.password= password
spring.datasource.driver-class-name= org.h2.Driver

spring.h2.console.enabled=true
spring.h2.console.path=/h2-console

spring.jpa.hibernate.ddl-auto= create
spring.jpa.database-platform= org.hibernate.dialect.H2Dialect
spring.jpa.generate-ddl=true
spring.jpa.show-sql=false

# The below 4 properties will be added as generic datasource properties
spring.datasource.hikari.data-source-properties.cachePrepStmts= true
spring.datasource.hikari.data-source-properties.prepStmtCacheSize= 250
spring.datasource.hikari.data-source-properties.prepStmtCacheSqlLimit= 2048
spring.datasource.hikari.data-source-properties.useServerPrepStmts= true

# in Hibernate 5.* the default ID generation algorithm was changed for MySQL to be using a sequence table. But we want to use the old way which is IDENTITY. 
spring.jpa.hibernate.use-new-id-generator-mappings= false

# case-sensitive Table names in the Entity annotations
spring.jpa.hibernate.naming.physical-strategy= org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
# add a comment to the generated SQL
spring.jpa.properties.hibernate.use_sql_comments= false
# Pretty-print the SQL in the log and console
spring.jpa.properties.hibernate.format_sql= false
# If you enable the hibernate.generate_statistics configuration property, Hibernate will expose a number of metrics via SessionFactory.getStatistics()
spring.jpa.properties.hibernate.generate_statistics= false
# Prevent exception at startup. It seems that when the dialect is set to MySQL this shouln't not be needed.
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation= true
# has to do how Joined inheritance hierarchy in Hibernate 5 works compared to 4, see HHH-6911
spring.jpa.properties.hibernate.discriminator.ignore_explicit_for_joined= true
# Most applications using Hibernate need some form of contextual session
spring.jpa.properties.hibernate.current_session_context_class= org.springframework.orm.hibernate5.SpringSessionContext
# prevent JPA to validate before persisting 
spring.jpa.properties.javax.persistence.validation.mode= none

